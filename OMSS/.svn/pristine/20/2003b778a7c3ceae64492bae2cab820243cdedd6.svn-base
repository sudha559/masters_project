package omss.repository;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import omss.domain.Patient;

public class PatientRepository {

	
	public static boolean createPatient(Patient p) {
		boolean status=false;  
		try{  
		  
		Connection con=JdbcConnection.getJDBC_connection();  
		      
		PreparedStatement ps=con.prepareStatement( "INSERT INTO patient (firstName,lastName,gender,email,password) "
                + "VALUES (?,?,?,?,?)");
		ps.setString(1, p.firstName);
		ps.setString(2, p.lastName);
		ps.setString(3, p.gender);
		ps.setString(4, p.email.toLowerCase());
		ps.setString(5, p.password);
		//ps.setTimestamp(5, Timestamp.valueOf(getTimeStamp(createdDate)));
		
		return ps.execute();
		
		}catch(Exception e){
			e.printStackTrace();
		}  
		return status;  
	}
	
	public static boolean isEmailAvilable(String email) {
		try {
			Connection con = JdbcConnection.getJDBC_connection();

			PreparedStatement ps = con.prepareStatement("select * from patient where email='"+email+"'");
			ResultSet rs = ps.executeQuery();
			
			while (rs.next()) {
				return true;
			}
		}catch(Exception e){
			e.printStackTrace();
		}
		
		return false;
	}

	public static Patient validateCredentials(String email, String password) {
		try {
			Connection con = JdbcConnection.getJDBC_connection();

			//PreparedStatement ps = con.prepareStatement("select * from user where name=? and password=? and role=?");
			PreparedStatement ps = con.prepareStatement("select * from patient where email=? and password=?");
			ps.setString(1,email );
			ps.setString(2, password);

			ResultSet rs = ps.executeQuery();
			while (rs.next()) {
				Patient p=new Patient();
				
				p.patientId=rs.getLong("patientId");
				p.firstName=rs.getString("firstName");
				p.lastName=rs.getString("lastName");
				p.email=rs.getString("email");
				p.password=rs.getString("password");
				
				return p;
			}
		}catch(Exception e){
			e.printStackTrace();
		}
		return null;
		
	}

	public static List<Patient> findAllPatients() {
		List<Patient> patients=new ArrayList<Patient>();
		try{  
			
			Connection con=JdbcConnection.getJDBC_connection();  
				PreparedStatement ps=con.prepareStatement( "select * from patient");
				ResultSet r=ps.executeQuery();
				while(r.next()){
					Patient p=new Patient();
					p.patientId=r.getLong("patientId");
					p.firstName=r.getString("firstName");
					p.lastName=r.getString("lastName");
					p.email=r.getString("email");
					p.password=r.getString("password");
					patients.add(p);
				}
			} catch (SQLException e) {
				e.printStackTrace();
			}
		return patients;
	}

	public static Patient findById(long patientId) {
		try{  
			
			Connection con=JdbcConnection.getJDBC_connection();  
				PreparedStatement ps=con.prepareStatement( "select * from patient where patientId="+patientId+";");
				ResultSet r=ps.executeQuery();
				while(r.next()){
					Patient p=new Patient();
					p.patientId=r.getLong("patientId");
					p.firstName=r.getString("firstName");
					p.lastName=r.getString("lastName");
					p.email=r.getString("email");
					p.password=r.getString("password");
					
					return p;
				}
			} catch (SQLException e) {
				e.printStackTrace();
			}
		return null;
	}
	

	public static void delete(String userId) throws SQLException {
		
			   String q="delete from patient where patientid='"+userId+"';";
			   System.out.println("Query:"+q);
			   Connection connection=JdbcConnection.getJDBC_connection();
			   Statement statement = connection.createStatement();
			    statement.execute(q);
			    	
	}

	public static void updatePatient(long patient, String psw) throws SQLException {

		//update omss.patient p set password='vamsi' where patientid=20;
		String q="update patient p set password='"+psw+"' where patientid='"+patient+"';";
		   System.out.println("Query:"+q);
		   Connection connection=JdbcConnection.getJDBC_connection();
		   Statement statement = connection.createStatement();
		    statement.execute(q);
	}
}
